version: "3"

services:
  jupyterLab:
    image: jupyterlab
    container_name: jupyterlab
    ports:
      - 9090:8888
    volumes:
      - ./workspace:/workspace
      - ./mnt:/mnt
      - ./jars:/jars
    networks:
      - spark_network

  spark-master:
    image: spark-master
    container_name: spark-master
    ports:
      - 8090:8080
      - 7077:7077
    volumes:
      - ./mnt:/mnt
    networks:
      - spark_network

  spark-worker_1:
    image: spark-worker
    container_name: spark-worker_1
    environment:
      - SPARK_WORKER_CORES=4
      - SPARK_WORKER_MEMORY=4096m
    ports:
      - 8091:8081
    volumes:
      - ./mnt:/mnt
    depends_on:
      - spark-master
    networks:
      - spark_network
    
  airflow-postgres:
      image: postgres:14
      container_name: airflow-metadata-postgres
      environment:
          - POSTGRES_USER=${POSTGRES_USER}
          - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
          - POSTGRES_DB=${POSTGRES_DATABASE}
      volumes:
          - ./postgres/data:/var/lib/postgresql/data
      ports:
          - "${POSTGRES_PORT}:5432"
      networks:
          - spark_network
  
  spark-airflow-init:
      build: 
          context: .
          dockerfile: ./docker/airflow.dockerfile
      container_name: spark-airflow-init
      volumes:
          - ./airflow/dags:/airflow/dags
          - ./workspace:/workspace
          - ./mnt:/mnt
          - ./jars:/jars
      networks:
          - spark_network
      depends_on:
          - airflow-postgres
      restart: 
          on-failure
      
  spark-airflow-webserver:
      build: 
          context: .
          dockerfile: ./docker/airflow.dockerfile
      container_name: spark-airflow-webserver
      volumes:
          - ./airflow/dags:/airflow/dags
          - ./workspace:/workspace
          - ./mnt:/mnt
          - ./jars:/jars
      ports:
          - 8080:8080
      networks:
          - spark_network
      command: airflow webserver
      depends_on:
          - spark-airflow-init
      restart: 
          on-failure
      
  spark-airflow-scheduler:
      build: 
          context: .
          dockerfile: ./docker/airflow.dockerfile
      container_name: spark-airflow-scheduler
      volumes:
          - ./airflow/dags:/airflow/dags
          - ./workspace:/workspace
          - ./mnt:/mnt
          - ./jars:/jars
      networks:
          - spark_network
      command: airflow scheduler
      depends_on:
          - spark-airflow-webserver
      restart: 
          on-failure

networks:
  spark_network:
    driver: bridge
